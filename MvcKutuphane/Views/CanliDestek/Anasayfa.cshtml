@{ ViewBag.Title = "Anasayfa";
                Layout = "~/Views/Shared/PanelLayout.cshtml"; }

@section styles{

    <link href="~/web/css/chatYetkili.css" rel="stylesheet" />

}


<div class="messaging">
    <div class="inbox_msg">
        <div class="inbox_people">
            <div class="headind_srch">
                <div class="recent_heading">
                    <h4>Recent</h4>
                </div>
                @*<div class="srch_bar">
                        <div class="stylish-input-group">
                            <input type="text" class="search-bar" placeholder="Search">
                            <span class="input-group-addon">
                                <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                            </span>
                        </div>
                    </div>*@
            </div>
            <div class="inbox_chat">
                @*<div class="chat_list">
                        <div class="chat_people">
                            <div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                            <div class="chat_ib"><h5>kk@kk</h5><p></p> </div>
                        </div>
                    </div>*@
            </div>
        </div>

        <div class="mesgs">
            <div class="msg_history">
                @*<div class="incoming_msg">
                        <div class="incoming_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                        <div class="received_msg">
                            <div class="received_withd_msg">
                                <p>
                                    Test which is a new approach to have all
                                    solutions
                                </p>
                                <span class="time_date"> 11:01 AM    |    June 9</span>
                            </div>
                        </div>
                    </div>
                    <div class="outgoing_msg">
                        <div class="sent_msg">
                            <p>
                                Test which is a new approach to have all
                                solutions
                            </p>
                            <span class="time_date"> 11:01 AM    |    June 9</span>
                        </div>
                    </div>*@
            </div>
            <div class="type_msg">
                <div class="input_msg_write">
                    <input type="text" class="write_msg" placeholder="Type a message" />
                    <button class="msg_send_btn" type="button"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
    </div>

    @section scripts{

        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <script>
            var users = [];
            var userEmail = "";

            $(document).ready(function () {

                $(document).on("click", '.chat_list', function (e) {
                    $('.chat_list').removeClass('active_chat');
                    $(this).addClass('active_chat');

                    userEmail = $(this).children().children().find('h5').html();

                    $('.msg_history').html('');

                    if (users.find(x => x.Email == userEmail) != undefined && users.find(x => x.Email == userEmail).Chat.length > 0) {

                        users.find(x => x.Email == userEmail).Chat.forEach((item, index) => {

                            if (!item.FromMe) {
                                $('.msg_history').append('<div class= "incoming_msg">' +
                                    '<div class="received_msg">' +
                                    '<div class="received_withd_msg"><p>' + item.Message + '</p></div></div></div>');
                            }
                            else {
                                $('.msg_history').append('<div class="outgoing_msg">' +
                                    '<div class="sent_msg"><p>' + item.Message + '</p></div></div>');
                            }


                            $(".msg_history").stop().animate({ scrollTop: $(".msg_history")[0].scrollHeight }, 1000);
                        });

                    }
                    else {
                        $('.msg_history').html('');
                    }
                });



            });

        $(function () { //This section will run whenever we call Chat.cshtml page

            var objHub = $.connection.chatHub;

            loadClientMethods(objHub);

            $.connection.hub.start().done(function () {

                loadEvents(objHub);

            });
        });

        function loadClientMethods(objHub) {

            objHub.client.getUser = function (email) {

                users.push({ Email: email, Chat: [] });

                var gelenUser = $('<div class="chat_list"><div class="chat_people"><div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>' +
                        '<div class="chat_ib"><h5>'+ email + '</h5><p></p> </div></div>');

                $('.inbox_chat').append(gelenUser);
            }

            objHub.client.getMessageFromUser = function (email, message) {

                var user = users.find(x => x.Email == email);
                user.Chat.push({ FromMe: false, Message: message });

                if (userEmail == email) {

                        var className1;

                        if (true) {
                            className1 = "incoming_msg";
                        }
                        else {
                            className1 = "outgoing_msg";
                        }

                        $('.msg_history').append('<div class= "' + className1 + '">' +
                            '<div class="received_msg">' +
                            '<div class="received_withd_msg"><p>' + message + '</p></div></div></div>');

                        $(".msg_history").stop().animate({ scrollTop: $(".msg_history")[0].scrollHeight }, 1000);

                }

            }

            objHub.client.closeUserChat = function (email) {

                var user = users.find(x => x.Email == email);

                for (var i = 0; i < users.length; i++) {

                    if (users[i] === user) {

                        users.splice(i, 1);
                    }
                }

                $('.chat_list').each((index, item) => {

                    userEmail = $(item).children().children().find('h5').html();

                    if (userEmail == email) {
                        item.remove();
                    }
                });

            }


        }

        function loadEvents(objHub) {

            objHub.server.connect('@User.Identity.Name');

            $('.msg_send_btn').click(function (e) {
                e.preventDefault();
                var msg = $('.write_msg').val().trim();

                objHub.server.sendMessageToUser(userEmail, msg);
                $('.write_msg').val("");

                var user = users.find(x => x.Email == userEmail);
                user.Chat.push({ FromMe: true, Message: msg });

                $('.msg_history').append('<div class="outgoing_msg">' +
                    '<div class="sent_msg"><p>' + msg + '</p></div></div>');

                $(".msg_history").stop().animate({ scrollTop: $(".msg_history")[0].scrollHeight }, 1000);

                $(".chatbox_body").stop().animate({ scrollTop: $(".chatbox_body")[0].scrollHeight }, 1000);
            });

        }


        </script>
    }
